drop table Prediccion;
drop table Evento;
drop table jornada;
drop table Temporada_Membresia;
drop table Membresia;
drop table Temporada;
DROP table Usuario;
drop table Deporte;




drop table Puntaje;
drop table Recompensa;



create table Usuario(
    id_usuario integer PRIMARY KEY,
    username varchar2(100) unique not null,
    contra varchar2(100) not null,
    nombre varchar2(100),
    apellido varchar2(100),
    tiers integer,
    fecha_naciemiento varchar2(100),
    fecha_registro varchar2(100),
    correo varchar2(100),
    foto  varchar2(255),
    tipo integer
);

create table Deporte(
    id_deporte integer primary key,
    nombre varchar2(100) unique not null,
    color varchar2 (250) unique not null
    
);

create table Temporada(
    id_temporada integer primary key,
    nombre VARCHAR2(100) unique not null
);
create table Membresia(
    id_membresia integer primary key,
    nombre varchar2(100) unique not null
);
create table Temporada_Membresia(
    id integer primary key,
    id_usuario integer not null,
    id_membresia integer not null,
    id_temporada integer not null,
    FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario),
    FOREIGN KEY (id_membresia) REFERENCES Membresia(id_membresia),
    FOREIGN KEY (id_temporada) REFERENCES Temporada(id_temporada)
);

create table Jornada(
    id_jornada  integer PRIMARY KEY,
    nombre varchar2(100),
    fase integer,
    id_temporada integer not null,
    FOREIGN KEY (id_temporada) REFERENCES Temporada(id_temporada)
);
create table Evento(
    id_evento integer PRIMARY KEY,
    Elocal varchar2(100),
    Evisitante varchar2(100),
    Rlocal integer,
    Rvisitante integer,
    fecha date,
    id_jornada integer not null,
    id_deporte integer not null,
    
    FOREIGN KEY (id_jornada) REFERENCES Jornada(id_jornada),
    FOREIGN KEY (id_deporte) REFERENCES Deporte(id_deporte)
);

create table Prediccion(
    id_prediccion  integer primary key,
    Plocal integer,
    Pvisitante integer,
    id_evento integer not null,
    id_usuario integer not null,
    FOREIGN KEY (id_evento) REFERENCES Evento(id_evento),
    FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario)

);







create table Puntaje(
    id_puntaje  integer GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1),
    puntos integer,
    id_temporada integer not null,
    constraint Puntaje_pk primary key (id_puntaje),
    FOREIGN KEY (id_temporada) REFERENCES Temporada(id_temporada)

);

create table Recompensa(
    id_recompensa  integer GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1),
    total integer,
    id_usuario integer not null,
    id_temporada integer not null,
    constraint Recompensa_pk primary key (id_recompensa),
    FOREIGN KEY (id_temporada) REFERENCES Temporada(id_temporada),
    FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario)
);

/*-----------borrar secuencias y triggers--------*/
drop sequence user_sequ;
drop sequence memb_sequ;
drop sequence det_sequ;
drop sequence temp_sequ;
drop sequence jor_sequ;
drop sequence dep_sequ;
drop sequence evt_sequ;
drop sequence pred_sequ;


DROP TRIGGER user_trigger;
drop trigger temp_trigger;
drop trigger memb_trigger;
drop trigger detT_trigger;
drop trigger jor_trigger;
drop trigger dep_trigger;
drop trigger evt_trigger;
drop trigger pred_trigger;
/*--------creacion de secuencias-*/
CREATE SEQUENCE user_sequ START WITH 1 ;
CREATE SEQUENCE temp_sequ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE memb_sequ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE det_sequ START WITH 1 INCREMENT BY 1;
create sequence jor_sequ START WITH 1 INCREMENT BY 1;
create sequence dep_sequ START WITH 1 INCREMENT BY 1;
create sequence evt_sequ START WITH 1 INCREMENT BY 1;
create sequence pred_sequ START WITH 1 INCREMENT BY 1;


/*-----creacion de triggers--------*/
CREATE TRIGGER user_trigger
BEFORE INSERT ON Usuario
FOR EACH ROW
BEGIN 
    SELECT user_sequ.NEXTVAL
    INTO :new.id_usuario
    FROM dual;
END;


CREATE TRIGGER temp_trigger
BEFORE INSERT ON Temporada
FOR EACH ROW
BEGIN 
    SELECT temp_sequ.NEXTVAL
    INTO :new.id_temporada
    FROM dual;
END;


CREATE TRIGGER memb_trigger
BEFORE INSERT ON Membresia
FOR EACH ROW
BEGIN 
    SELECT memb_sequ.NEXTVAL
    INTO :new.id_membresia
    FROM dual;
END;

CREATE TRIGGER detT_trigger
BEFORE INSERT ON Temporada_Membresia
FOR EACH ROW
BEGIN 
    SELECT det_sequ.NEXTVAL
    INTO :new.id
    FROM dual;
END;

CREATE TRIGGER jor_trigger
BEFORE INSERT ON Jornada
FOR EACH ROW
BEGIN 
    SELECT jor_sequ.NEXTVAL
    INTO :new.id_jornada
    FROM dual;
END;

CREATE TRIGGER dep_trigger
BEFORE INSERT ON Deporte
FOR EACH ROW
BEGIN 
    SELECT dep_sequ.NEXTVAL
    INTO :new.id_deporte
    FROM dual;
END;

CREATE TRIGGER evt_trigger
BEFORE INSERT ON Evento
FOR EACH ROW
BEGIN 
    SELECT evt_sequ.NEXTVAL
    INTO :new.id_evento
    FROM dual;
END;

CREATE TRIGGER pred_trigger
BEFORE INSERT ON Prediccion
FOR EACH ROW
BEGIN 
    SELECT pred_sequ.NEXTVAL
    INTO :new.id_Prediccion
    FROM dual;
END;

/*----------selects e inserts --------------------*/
select *from Temporada;
select *from Usuario;
select *from Membresia;
select *from Temporada_Membresia;
select *from Jornada;
select *from Deporte;
select count(*) from Jornada;
select *from Evento;
SELECT  nombre,color  from Deporte;
/*--------inserts----------*/
select *from Usuario where username = 'admin';
/*--------------------------*/
select *from Usuario;
select *from Temporada;
select *from Membresia;
select *from Temporada_Membresia;
select *from Jornada;
select *from Deporte;
select *from Evento;
select count(*)from  Evento;
/*-------------------------------------------*/
select nombre, fase, id_temporada from Jornada where jornada.nombre = 'J1' and jornada.id_temporada = 30;
insert into Usuario(username,contra,foto,tipo) values('admin','admin','imagenes/admin',2);
insert into Membresia(nombre) values('gold');
insert into Membresia(nombre) values('silver');
insert into Membresia(nombre) values('bronze');
select *from Membresia;
select id_temporada from Temporada where nombre = '2018-Q11';

INSERT INTO Temporda_Membresia (id_usuario, id_membresia, id_temporada)
        VALUES (
        (SELECT cliente.ID from CLIENTE where CLIENTE.USUARIO = cli), 
        (SELECT MEMBRESIA.ID from MEMBRESIA where MEMBRESIA.NOMBRE = mem),
        (SELECT TEMPORADA.ID from TEMPORADA where TEMPORADA.NOMBRE = tempo)
        );
update Usuario set foto = 'imagenes/admin' wher username = 'admin';

select count(Usuario.id_usuario)  as Cantidad
from Usuario
inner join  Temporada_Membresia  on Usuario.id_usuario = Temporada_Membresia.id_usuario  
inner join  Membresia on Temporada_Membresia.id_membresia = Membresia.id_membresia  
inner join  Temporada on Temporada_Membresia.id_Temporada = Temporada.id_temporada 
where Membresia.nombre = 'silver' and  Temporada.nombre = '2018-Q11';

select distinct Usuario.username, Usuario.nombre, Usuario.apellido, Membresia.nombre
from Usuario
inner join Temporada_Membresia on Usuario.id_usuario = Temporada_Membresia.id_usuario
inner join Membresia on Temporada_Membresia.id_membresia = Membresia.id_membresia
inner join  Temporada on Temporada_Membresia.id_Temporada = Temporada.id_temporada 
order by Usuario.nombre Asc;
/*-----------PROCEDIMIENTOS-------------*/

create or replace procedure Mostrar_tiers(tie in varchar2, temp in varchar2)
is
cant varchar(200);
begin 
    select count(Usuario.id_usuario)  as Cantidad into  cant 
    from Usuario
    inner join  Temporada_Membresia  on Usuario.id_usuario = Temporada_Membresia.id_usuario  
    inner join  Membresia on Temporada_Membresia.id_membresia = Membresia.id_membresia  
    inner join  Temporada on Temporada_Membresia.id_Temporada = Temporada.id_temporada 
    where Membresia.nombre = tie and  Temporada.nombre = temp;

END;

create or replace PROCEDURE insert_jornada(jorn in varchar2,temp in varchar)
as
  l_exst number;

BEGIN
    select count (*) into l_exst from Jornada where Jornada.nombre = jorn 
    and id_temporada = ( select id_temporada from Temporada where Temporada.nombre = temp);
    if l_exst = 0 then 
        insert into Jornada (nombre,fase,id_temporada) 
        VALUES (jorn,2,(select id_temporada from Temporada where Temporada.nombre = temp));
    END IF;
END;

create or replace procedure insert_evento(nombreL in varchar2,nombreV in varchar2,resultadoL in varchar2,resultadoV in varchar2,fecha in varchar2,deporte in varchar2 ,jornada in varchar,temp in integer)
as
begin
INSERT INTO Evento(Elocal, Evisitante, Rlocal, Rvisitante, fecha, id_jornada, id_deporte)
        VALUES (nombreL, nombreV,resultadoL,resultadoV,
        TO_DATE(fecha, 'DD-MM-YYYY HH24:MI'),
        (SELECT Jornada.Id_jornada from Jornada where Jornada.nombre = jornada and Jornada.id_temporada = temp),
        (select Deporte.Id_deporte from Deporte where Deporte.nombre = deporte)
        );
end;

CREATE OR REPLACE PROCEDURE Insert_Prediccion (pre_local in INTEGER, pre_visitante in INTEGER,even in INTEGER, cli in VARCHAR2 )
AS
BEGIN
        INSERT INTO Prediccion (Plocal, Pvisitante,id_evento,id_usuario)
        VALUES (pre_local, 
        pre_visitante,
        even,
        (SELECT Usuario.Id_usuario from Usuario where Usuario.username = cli)
        );
END;

select Deporte.Id_deporte from Deporte where Deporte.nombre = '';
SELECT Jornada.Id_jornada from Jornada where Jornada.nombre = 'J1' and Jornada.id_temporada = 31;

INSERT INTO Evento(Elocal, Evisitante, Rlocal, Rvisitante, fecha, id_jornada, id_deporte)
values('popo','pene',1,1,TO_DATE('04/11/2019 15:09', 'DD-MM-YYYY HH24:MI'),4,1);

EXECUTE insert_jornada('A10','2019-Q11');

BEGIN Mostrar_tiers('gold','2019-Q11');END;

BEGIN insert_jornada('A10','2019-Q11');END;

BEGIN insert_evento('caca','popo',5,6,'04/11/2019 15:09','Carrera','J1',31);END;
BEGIN Insert_Prediccion(1,2,8,'aboxerz@tiny.cc');END;
select *from Evento;
select *from Prediccion;

commit work;
